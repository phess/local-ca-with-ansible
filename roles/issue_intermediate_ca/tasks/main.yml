---
### Based on https://docs.ansible.com/ansible/latest/collections/community/crypto/docsite/guide_ownca.html
- name: "Does the server cert exist at {{ server_cert_file }}?"
  ansible.builtin.stat:
    path: "{{ server_cert_file }}"
  register: server_file_stat

- name: Set stat results
  ansible.builtin.set_fact:
    server_cert_file_exists: "{{ server_file_stat.stat.exists }}"

- name: "Ensure {{ server_cert_dir }} exists"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ server_cert_dir }}"
    - "{{ server_key_dir }}"

- name: "Create private key at {{ server_key_file }} for new certificate"
  community.crypto.openssl_privatekey:
    path: "{{ server_key_file }}"
    # Always careful
    backup: yes
    force: no
    # Encrypt?
    passphrase: "{{ server_key_passphrase | default('', False) }}"
    # Where?
    path: "{{ server_key_file }}"
    # Allow deep tweaking; values below are the defaults and can be removed.
    curve: "{{ server_key_curve | default('secp256r1') }}"
    format: "{{ server_key_format | default('auto_ignore') }}"
    # Key generation parameters
    size: "{{ server_key_size | default(4096) }}"
    type: "{{ server_key_type | default('RSA') }}"
    # Docs say this "must be auto".
    cipher: auto

- name: Create certificate signing request (CSR) for new certificate
  community.crypto.openssl_csr_pipe:
    common_name: "{{ server_cert_name }}"
    privatekey_path: "{{ server_key_file }}"
    subject_alt_name: "{{ server_cert_cnames }}"
    basic_constraints_critical: true
    basic_constraints:
      - 'CA:TRUE'
    # Parameters beyond the bare minimum
    create_subject_key_identifier: true
    key_usage_critical: true
    key_usage:
      - keyCertSign    
  register: intermediate_ca_csr

- name: Sign certificate with our CA
  community.crypto.x509_certificate_pipe:
    csr_content: "{{ server_cert_csr.csr }}"
    provider: ownca
    ownca_path: "{{ root_ca_cert_file }}"
    ownca_privatekey_path: "{{ root_ca_key_file }}"
    #ownca_privatekey_passphrase: "{{ secret_ca_passphrase }}"
    ownca_not_after: +365d  # valid for one year
    ownca_not_before: "-1d"  # valid since yesterday
  register: certificate

- name: "Write certificate file to {{ server_cert_file }}"
  ansible.builtin.copy:
    dest: "{{ server_cert_file }}"
    content: "{{ certificate.certificate }}"

- name: Place the CA bundle in the same dir as server certs
  ansible.builtin.copy:
    path: "{{ server_cert_dir }}/ca-bundle.pem"
    content: "{{ lookup(ansible.builtin.file, item }}"
  loop: CA_hierarchy
  when: server_ca_cert != root_ca_cert_file

- name: Place a copy of the CA cert in the same dir as server certs
  ansible.builtin.copy:
    path: "{{ server_cert_dir }}/ca-bundle.pem"
    content: "{{ lookup(ansible.builtin.file, server_ca_cert }}"
  when: server_ca_cert == root_ca_cert_file
